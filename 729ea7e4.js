import{h as n}from"./ba1498b4.js";import"./e47816b7.js";import{H as s,D as a,R as t,Z as p}from"./6f01cc0e.js";import{N as o,W as c}from"./e3e90c45.js";import"./962426a7.js";let e,u,l=n=>n;customElements.define("holochain-playground-container",s),customElements.define("dht-cells",a),customElements.define("run-steps",t),customElements.define("zome-fns-results",p);const k=[{title:"Alice tries to do a remote call on Bob's 'sample' zome function",run:async n=>{const s=n.conductors[0],a=s.getAllCells()[0].cellId,t=n.conductors[1].getAllCells()[0].cellId;n.updatePlayground({activeAgentPubKey:a[1]});try{await s.callZomeFn({cellId:a,zome:"sample",payload:{agentToCall:t[1]},fnName:"remote_sample_fn",cap:null})}catch(n){}}},{title:"Bob trusts her, so he creates a capability grant for Alice",run:async n=>{const s=n.conductors[0].getAllCells()[0].cellId,a=n.conductors[1],t=a.getAllCells()[0].cellId;n.updatePlayground({activeAgentPubKey:t[1]});try{u=await a.callZomeFn({cellId:t,zome:"sample",payload:{grantedAgent:s[1]},fnName:"create_cap",cap:null})}catch(n){}}},{title:"Alice tries to call the 'sample' function for Bob again",run:async n=>{const s=n.conductors[0],a=s.getAllCells()[0].cellId,t=n.conductors[1].getAllCells()[0].cellId;n.updatePlayground({activeAgentPubKey:a[1]});try{await s.callZomeFn({cellId:a,zome:"sample",payload:{agentToCall:t[1]},fnName:"remote_sample_fn",cap:null})}catch(n){}}},{title:"Bob doesn't trust Alice anymore, so he revokes her capability grant",run:async n=>{n.conductors[0].getAllCells()[0].cellId;const s=n.conductors[1],a=s.getAllCells()[0].cellId;n.updatePlayground({activeAgentPubKey:a[1]});try{await s.callZomeFn({cellId:a,zome:"sample",payload:{capGrantToRevoke:u},fnName:"revoke_cap",cap:null})}catch(n){}}},{title:"Alice tries to call the 'sample' function for Bob again",run:async n=>{const s=n.conductors[0],a=s.getAllCells()[0].cellId,t=n.conductors[1].getAllCells()[0].cellId;n.updatePlayground({activeAgentPubKey:a[1]});try{await s.callZomeFn({cellId:a,zome:"sample",payload:{agentToCall:t[1]},fnName:"remote_sample_fn",cap:null})}catch(n){}}}],i={zomes:[{name:"sample",entry_defs:[],zome_functions:{create_cap:{call:({create_cap_grant:n})=>({grantedAgent:s})=>n({tag:"",access:{Assigned:{secret:"",assignees:[s]}},functions:[{zome:"sample",fn_name:"sample_fn"}]}),arguments:[{type:"AgentPubKey",name:"grantedAgent"}]},sample_fn:{call:()=>()=>"Hello",arguments:[]},revoke_cap:{call:({delete_cap_grant:n})=>({capGrantToRevoke:s})=>n(s),arguments:[{type:"HeaderHash",name:"capGrantToRevoke"}]},remote_sample_fn:{call:({call_remote:n})=>({agentToCall:s})=>n({agent:s,zome:"sample",fn_name:"sample_fn",cap:null,payload:null}),arguments:[{type:"AgentPubKey",name:"agentToCall"}]}}}]},r=document,d=[{key:"Demo",story:()=>n(e||(e=l` <holochain-playground-container
  id="container"
  .numberOfSimulatedConductors=${0}
  .simulatedDnaTemplate=${0}
>
  <div
    style="width: 100%; display: flex; flex-direction: row; margin-bottom: 20px;"
  >
    <run-steps
      .steps=${0}
      style="flex: 1; margin-right: 20px; height: 350px;"
    ></run-steps>
    <dht-cells
      step-by-step
      hide-filter
      style="height: 600px; flex-basis: 700px;"
      show-zome-fn-success
      .workflowsToDisplay=${0}
      .networkRequestsToDisplay=${0}
    ></dht-cells>
  </div>
</holochain-playground-container>`),2,i,k,[c.CALL_ZOME],[o.CALL_REMOTE]),code:'<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> capGrantHash <span class="token operator">=</span> <span class="token keyword nil">undefined</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> steps <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">"Alice tries to do a remote call on Bob\'s \'sample\' zome function"</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> aliceConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> aliceCellId <span class="token operator">=</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobCellId <span class="token operator">=</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n      context<span class="token punctuation">.</span><span class="token method function property-access">updatePlayground</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        activeAgentPubKey<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> agentToCall<span class="token punctuation">:</span> bobCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"remote_sample_fn"</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">"Bob trusts her, so he creates a capability grant for Alice"</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> aliceConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> aliceCellId <span class="token operator">=</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobCellId <span class="token operator">=</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n      context<span class="token punctuation">.</span><span class="token method function property-access">updatePlayground</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        activeAgentPubKey<span class="token punctuation">:</span> bobCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        capGrantHash <span class="token operator">=</span> <span class="token keyword">await</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">:</span> bobCellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> grantedAgent<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"create_cap"</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">"Alice tries to call the \'sample\' function for Bob again"</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> aliceConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> aliceCellId <span class="token operator">=</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobCellId <span class="token operator">=</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n      context<span class="token punctuation">.</span><span class="token method function property-access">updatePlayground</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        activeAgentPubKey<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> agentToCall<span class="token punctuation">:</span> bobCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"remote_sample_fn"</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span>\n      <span class="token string">"Bob doesn\'t trust Alice anymore, so he revokes her capability grant"</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> aliceConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> aliceCellId <span class="token operator">=</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobCellId <span class="token operator">=</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n      context<span class="token punctuation">.</span><span class="token method function property-access">updatePlayground</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        activeAgentPubKey<span class="token punctuation">:</span> bobCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">:</span> bobCellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> capGrantToRevoke<span class="token punctuation">:</span> capGrantHash <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"revoke_cap"</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">"Alice tries to call the \'sample\' function for Bob again"</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">run</span><span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> aliceConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> aliceCellId <span class="token operator">=</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobConductor <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> bobCellId <span class="token operator">=</span> bobConductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n      context<span class="token punctuation">.</span><span class="token method function property-access">updatePlayground</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        activeAgentPubKey<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> aliceConductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">:</span> aliceCellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> agentToCall<span class="token punctuation">:</span> bobCellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"remote_sample_fn"</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> dna <span class="token operator">=</span> <span class="token punctuation">{</span>\n  zomes<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n      entry_defs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      zome_functions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        create_cap<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> create_cap_grant <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> grantedAgent <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">create_cap_grant</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              tag<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n              access<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token maybe-class-name">Assigned</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                  secret<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n                  assignees<span class="token punctuation">:</span> <span class="token punctuation">[</span>grantedAgent<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              functions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span> fn_name<span class="token punctuation">:</span> <span class="token string">"sample_fn"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">"AgentPubKey"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"grantedAgent"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        sample_fn<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">"Hello"</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        revoke_cap<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> delete_cap_grant <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> capGrantToRevoke <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">delete_cap_grant</span><span class="token punctuation">(</span>capGrantToRevoke<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">"HeaderHash"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"capGrantToRevoke"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        remote_sample_fn<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> call_remote <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> agentToCall <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">call_remote</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              agent<span class="token punctuation">:</span> agentToCall<span class="token punctuation">,</span>\n              zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n              fn_name<span class="token punctuation">:</span> <span class="token string">"sample_fn"</span><span class="token punctuation">,</span>\n              cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n              payload<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">"AgentPubKey"</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">"agentToCall"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword module">export</span> <span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Demo</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> html<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token html language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>holochain-playground-container</span>\n  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span>\n  <span class="token attr-name">.numberOfSimulatedConductors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">2</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n  <span class="token attr-name">.simulatedDnaTemplate</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>dna<span class="token interpolation-punctuation punctuation">}</span></span></span>\n<span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token style-attr language-css"><span class="token attr-name">\n    <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token unit">%</span><span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n  <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>run-steps</span>\n      <span class="token attr-name">.steps</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>steps<span class="token interpolation-punctuation punctuation">}</span></span></span><span class="token style-attr language-css"><span class="token attr-name">\n      <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">350</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>run-steps</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dht-cells</span>\n      <span class="token attr-name">step-by-step</span>\n      <span class="token attr-name">hide-filter</span><span class="token style-attr language-css"><span class="token attr-name">\n      <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token attr-name">show-zome-fn-success</span>\n      <span class="token attr-name">.workflowsToDisplay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">[</span><span class="token maybe-class-name">WorkflowType</span><span class="token punctuation">.</span><span class="token constant">CALL_ZOME</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">.networkRequestsToDisplay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">[</span><span class="token maybe-class-name">NetworkRequestType</span><span class="token punctuation">.</span><span class="token constant">CALL_REMOTE</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dht-cells</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>holochain-playground-container</span><span class="token punctuation">></span></span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>'}];for(const n of d){const s=r.querySelector(`[mdjs-story-name="${n.key}"]`);s.codeHasHtml=!0,s.story=n.story,s.code=n.code}customElements.get("mdjs-preview")||import("./af5231aa.js"),customElements.get("mdjs-story")||import("./24f48d72.js");
