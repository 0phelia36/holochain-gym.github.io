import"./092198c1.js";import{h as n}from"./1f529ce5.js";import{H as a,E as s,a as t,C as p}from"./e1481b77.js";import"./daaff894.js";import"./962426a7.js";let o,e,c=n=>n;customElements.define("holochain-playground-container",a),customElements.define("entry-graph",s),customElements.define("entry-contents",t),customElements.define("call-zome-fns",p);const u={zomes:[{name:"sample",entry_defs:[{id:"path",visibility:"Public"}],zome_functions:{create_path:{call:n=>({path:a})=>n.path.ensure(a,n),arguments:[{name:"path",type:"String"}]}}}]},l={zomes:[{name:"sample",entry_defs:[{id:"post",visibility:"Public"},{id:"path",visibility:"Public"}],zome_functions:{create_post:{call:n=>async({content:a,tag1:s,tag2:t})=>{await n.create_entry({content:a,entry_def_id:"post"});const p=await n.hash_entry({content:a}),o=new Date,e=`all_posts.${o.getUTCFullYear()}-${o.getMonth()+1}-${o.getUTCDate()}.${o.getHours()}`;await n.path.ensure(e,n);const c=await n.hash_entry({content:e});await n.create_link({base:c,target:p,tag:null});for(const a of[s,t])if(a){const s=`all_tags.${a}`;await n.path.ensure(s,n);const t=await n.hash_entry({content:s});await n.create_link({base:t,target:p,tag:null})}return p},arguments:[{name:"content",type:"String"},{name:"tag1",type:"String"},{name:"tag2",type:"String"}]}}}]},i=document,k=[{key:"Simple",story:()=>n(o||(o=c`
    <holochain-playground-container
      .numberOfSimulatedConductors=${0}
      .simulatedDnaTemplate=${0}
      @ready=${0}
    >
      <div
        style="display: flex; flex-direction: row; align-items: start; margin-bottom: 20px;"
      >
        <call-zome-fns
          id="call-zome"
          style="height: 250px; margin-right: 20px;"
          hide-zome-selector
          hide-agent-pub-key
          hide-results
        >
        </call-zome-fns>
        <entry-contents style="flex-basis: 500px; height: 250px;"> </entry-contents>
      </div>
      <entry-graph
        .showFilter=${0}
        .excludedEntryTypes=${0}
        style="flex: 1; height: 500px; margin-bottom: 24px;"
      >
      </entry-graph>
    </holochain-playground-container>
  `),1,u,(n=>{const a=n.detail.conductors[0],s=a.getAllCells()[0].cellId;n.target.activeAgentPubKey=s[1],a.callZomeFn({cellId:s,zome:"sample",fnName:"create_path",payload:{path:"a.sample.path"},cap:null}).then((()=>a.callZomeFn({cellId:s,zome:"sample",fnName:"create_path",payload:{path:"a.sample.path2"},cap:null})))}),!1,["Agent"]),code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> sampleZome <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n  entry_defs<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      id<span class="token punctuation">:</span> <span class="token string">"path"</span><span class="token punctuation">,</span>\n      visibility<span class="token punctuation">:</span> <span class="token string">"Public"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  zome_functions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    create_path<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">hdk</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> hdk<span class="token punctuation">.</span><span class="token property-access">path</span><span class="token punctuation">.</span><span class="token method function property-access">ensure</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> hdk<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"path"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> simulatedDnaTemplate <span class="token operator">=</span> <span class="token punctuation">{</span>\n  zomes<span class="token punctuation">:</span> <span class="token punctuation">[</span>sampleZome<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword module">export</span> <span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Simple</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> html<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token html language-html">\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>holochain-playground-container</span>\n      <span class="token attr-name">.numberOfSimulatedConductors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">.simulatedDnaTemplate</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>simulatedDnaTemplate<span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">@ready</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> conductor <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token property-access">detail</span><span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> cellId <span class="token operator">=</span> conductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n        e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">activeAgentPubKey</span> <span class="token operator">=</span> cellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        conductor\n          <span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            cellId<span class="token punctuation">,</span>\n            zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n            fnName<span class="token punctuation">:</span> <span class="token string">"create_path"</span><span class="token punctuation">,</span>\n            payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token string">"a.sample.path"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">.</span><span class="token method function property-access">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span>\n            conductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              cellId<span class="token punctuation">,</span>\n              zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n              fnName<span class="token punctuation">:</span> <span class="token string">"create_path"</span><span class="token punctuation">,</span>\n              payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> path<span class="token punctuation">:</span> <span class="token string">"a.sample.path2"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token interpolation-punctuation punctuation">}</span></span>}</span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token property">align-items</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>call-zome-fns</span>\n          <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>call-zome<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">\n          <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">250</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n          <span class="token attr-name">hide-zome-selector</span>\n          <span class="token attr-name">hide-agent-pub-key</span>\n          <span class="token attr-name">hide-results</span>\n        <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>call-zome-fns</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>entry-contents</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">250</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>entry-contents</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>entry-graph</span>\n        <span class="token attr-name">.showFilter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token boolean">false</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n        <span class="token attr-name">.excludedEntryTypes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">[</span><span class="token string">"Agent"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span></span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>entry-graph</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>holochain-playground-container</span><span class="token punctuation">></span></span>\n  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>'},{key:"Exercise",story:()=>n(e||(e=c`
    <holochain-playground-container
      .numberOfSimulatedConductors=${0}
      .simulatedDnaTemplate=${0}
      @ready=${0}
    >
      <div
        style="display: flex; flex-direction: row; align-items: start; margin-bottom: 20px;"
      >
        <call-zome-fns
          id="call-zome"
          style="height: 400px; margin-right: 20px;"
          hide-zome-selector
          hide-agent-pub-key
          hide-results
        >
        </call-zome-fns>
        <entry-contents style="flex-basis: 500px; height: 400px;"> </entry-contents>
      </div>
      <entry-graph
        .showFilter=${0}
        .excludedEntryTypes=${0}
        style="flex: 1; height: 500px; margin-bottom: 24px;"
      >
      </entry-graph>
    </holochain-playground-container>
  `),1,l,(n=>{const a=n.detail.conductors[0],s=a.getAllCells()[0].cellId;n.target.activeAgentPubKey=s[1],a.callZomeFn({cellId:s,zome:"sample",fnName:"create_post",payload:{content:"good morning",tag1:"nature",tag2:"giraffe"},cap:null})}),!1,["Agent"]),code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> sampleZome1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n  entry_defs<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      id<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>\n      visibility<span class="token punctuation">:</span> <span class="token string">"Public"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      id<span class="token punctuation">:</span> <span class="token string">"path"</span><span class="token punctuation">,</span>\n      visibility<span class="token punctuation">:</span> <span class="token string">"Public"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  zome_functions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    create_post<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter">hdk</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> content<span class="token punctuation">,</span> tag1<span class="token punctuation">,</span> tag2 <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">create_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          content<span class="token punctuation">,</span>\n          entry_def_id<span class="token punctuation">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> postHash <span class="token operator">=</span> <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">hash_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> pathStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">all_posts.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>date<span class="token punctuation">.</span><span class="token method function property-access">getUTCFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>\n          date<span class="token punctuation">.</span><span class="token method function property-access">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>\n        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>date<span class="token punctuation">.</span><span class="token method function property-access">getUTCDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>date<span class="token punctuation">.</span><span class="token method function property-access">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token property-access">path</span><span class="token punctuation">.</span><span class="token method function property-access">ensure</span><span class="token punctuation">(</span>pathStr<span class="token punctuation">,</span> hdk<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> pathHash <span class="token operator">=</span> <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">hash_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content<span class="token punctuation">:</span> pathStr <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">create_link</span><span class="token punctuation">(</span><span class="token punctuation">{</span> base<span class="token punctuation">:</span> pathHash<span class="token punctuation">,</span> target<span class="token punctuation">:</span> postHash<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> <span class="token keyword null nil">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> tag <span class="token keyword">of</span> <span class="token punctuation">[</span>tag1<span class="token punctuation">,</span> tag2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> pathContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">all_tags.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n            <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token property-access">path</span><span class="token punctuation">.</span><span class="token method function property-access">ensure</span><span class="token punctuation">(</span>pathContent<span class="token punctuation">,</span> hdk<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">const</span> tagPathHash <span class="token operator">=</span> <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">hash_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content<span class="token punctuation">:</span> pathContent <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">await</span> hdk<span class="token punctuation">.</span><span class="token method function property-access">create_link</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              base<span class="token punctuation">:</span> tagPathHash<span class="token punctuation">,</span>\n              target<span class="token punctuation">:</span> postHash<span class="token punctuation">,</span>\n              tag<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> postHash<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"content"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"tag1"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"tag2"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> simulatedDnaTemplate1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  zomes<span class="token punctuation">:</span> <span class="token punctuation">[</span>sampleZome1<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword module">export</span> <span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Exercise</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> html<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token html language-html">\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>holochain-playground-container</span>\n      <span class="token attr-name">.numberOfSimulatedConductors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">.simulatedDnaTemplate</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>simulatedDnaTemplate1<span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">@ready</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> conductor <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token property-access">detail</span><span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> cellId <span class="token operator">=</span> conductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n        e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">activeAgentPubKey</span> <span class="token operator">=</span> cellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        conductor<span class="token punctuation">.</span><span class="token method function property-access">callZomeFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          cellId<span class="token punctuation">,</span>\n          zome<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          fnName<span class="token punctuation">:</span> <span class="token string">"create_post"</span><span class="token punctuation">,</span>\n          payload<span class="token punctuation">:</span> <span class="token punctuation">{</span> content<span class="token punctuation">:</span> <span class="token string">"good morning"</span><span class="token punctuation">,</span> tag1<span class="token punctuation">:</span> <span class="token string">"nature"</span><span class="token punctuation">,</span> tag2<span class="token punctuation">:</span> <span class="token string">"giraffe"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          cap<span class="token punctuation">:</span> <span class="token keyword null nil">null</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token interpolation-punctuation punctuation">}</span></span>}</span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token property">align-items</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>call-zome-fns</span>\n          <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>call-zome<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">\n          <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n          <span class="token attr-name">hide-zome-selector</span>\n          <span class="token attr-name">hide-agent-pub-key</span>\n          <span class="token attr-name">hide-results</span>\n        <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>call-zome-fns</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>entry-contents</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>entry-contents</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>entry-graph</span>\n        <span class="token attr-name">.showFilter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token boolean">false</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n        <span class="token attr-name">.excludedEntryTypes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">[</span><span class="token string">"Agent"</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span></span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>entry-graph</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>holochain-playground-container</span><span class="token punctuation">></span></span>\n  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>'}];for(const n of k){const a=i.querySelector(`[mdjs-story-name="${n.key}"]`);a.codeHasHtml=!0,a.story=n.story,a.code=n.code}customElements.get("mdjs-preview")||import("./a051fe6f.js"),customElements.get("mdjs-story")||import("./7868ca22.js");
