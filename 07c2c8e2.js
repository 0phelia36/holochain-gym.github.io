import"./e47816b7.js";import{h as n}from"./ba1498b4.js";import{H as s,E as a,a as t,C as p,S as o,D as e}from"./17157e21.js";import"./962426a7.js";let c,u=n=>n;customElements.define("holochain-playground-container",s),customElements.define("entry-graph",a),customElements.define("entry-contents",t),customElements.define("call-zome-fns",p),customElements.define("source-chain",o),customElements.define("dht-cells",e);const l={zomes:[{name:"entries",entry_defs:[{id:"sample",visibility:"Public"}],zome_functions:{create_entry:{call:({create_entry:n,hash_entry:s})=>async({content:s})=>n({content:s,entry_def_id:"sample"}),arguments:[{name:"content",type:"String"}]},update_entry:{call:({update_entry:n})=>({original_header_address:s,new_content:a})=>n(s,{content:a,entry_def_id:"sample"}),arguments:[{name:"original_header_address",type:"HeaderHash"},{name:"new_content",type:"String"}]},delete_entry:{call:({delete_entry:n})=>({deletes_header_address:s})=>n(s),arguments:[{name:"deletes_header_address",type:"HeaderHash"}]}}},{name:"links",entry_defs:[{id:"sample",visibility:"Public"}],zome_functions:{create_link:{call:({create_link:n})=>({base:s,target:a,tag:t})=>n({base:s,target:a,tag:t}),arguments:[{name:"base",type:"EntryHash"},{name:"target",type:"EntryHash"},{name:"tag",type:"any"}]},delete_link:{call:({delete_link:n})=>({header_hash:s})=>n({header_hash:s}),arguments:[{name:"header_hash",type:"HeaderHash"}]}}}]},i=document,k=[{key:"Simple",story:()=>n(c||(c=u`
    <holochain-playground-container
      .numberOfSimulatedConductors=${0}
      .simulatedDnaTemplate=${0}
      @ready=${0}
    >
      <call-zome-fns
        id="call-zome"
        style="height: 400px; margin-bottom: 20px;"
        hide-agent-pub-key
      >
      </call-zome-fns>
      <div
        style="display: flex; flex-direction: row; align-items: start; margin-bottom: 20px;"
      >
        <source-chain style="flex: 1; height: 600px; margin-right: 20px;">
        </source-chain>
        <entry-contents style="flex-basis: 500px; height: 600px;">
        </entry-contents>
      </div>
    </holochain-playground-container>
  `),1,l,(n=>{const s=n.detail.conductors[0].getAllCells()[0].cellId;n.target.activeAgentPubKey=s[1]})),code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> simulatedDnaTemplate <span class="token operator">=</span> <span class="token punctuation">{</span>\n  zomes<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">"entries"</span><span class="token punctuation">,</span>\n      entry_defs<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          id<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          visibility<span class="token punctuation">:</span> <span class="token string">"Public"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      zome_functions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        create_entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> create_entry<span class="token punctuation">,</span> hash_entry <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> content <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">create_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content<span class="token punctuation">,</span> entry_def_id<span class="token punctuation">:</span> <span class="token string">"sample"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"content"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        update_entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> update_entry <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n            original_header_address<span class="token punctuation">,</span>\n            new_content<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">update_entry</span><span class="token punctuation">(</span>original_header_address<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              content<span class="token punctuation">:</span> new_content<span class="token punctuation">,</span>\n              entry_def_id<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"original_header_address"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"HeaderHash"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"new_content"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"String"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        delete_entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> delete_entry <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> deletes_header_address <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">delete_entry</span><span class="token punctuation">(</span>deletes_header_address<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"deletes_header_address"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"HeaderHash"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      name<span class="token punctuation">:</span> <span class="token string">"links"</span><span class="token punctuation">,</span>\n      entry_defs<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          id<span class="token punctuation">:</span> <span class="token string">"sample"</span><span class="token punctuation">,</span>\n          visibility<span class="token punctuation">:</span> <span class="token string">"Public"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      zome_functions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        create_link<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> create_link <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> base<span class="token punctuation">,</span> target<span class="token punctuation">,</span> tag <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">create_link</span><span class="token punctuation">(</span><span class="token punctuation">{</span> base<span class="token punctuation">,</span> target<span class="token punctuation">,</span> tag <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"base"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"EntryHash"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"target"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"EntryHash"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"tag"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"any"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        delete_link<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">call</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> delete_link <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> header_hash <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">delete_link</span><span class="token punctuation">(</span><span class="token punctuation">{</span> header_hash <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">"header_hash"</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">"HeaderHash"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword module">export</span> <span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Simple</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> html<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token html language-html">\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>holochain-playground-container</span>\n      <span class="token attr-name">.numberOfSimulatedConductors</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">.simulatedDnaTemplate</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>simulatedDnaTemplate<span class="token interpolation-punctuation punctuation">}</span></span></span>\n      <span class="token attr-name">@ready</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> conductor <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token property-access">detail</span><span class="token punctuation">.</span><span class="token property-access">conductors</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">const</span> cellId <span class="token operator">=</span> conductor<span class="token punctuation">.</span><span class="token method function property-access">getAllCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">cellId</span><span class="token punctuation">;</span>\n\n        e<span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">activeAgentPubKey</span> <span class="token operator">=</span> cellId<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token interpolation-punctuation punctuation">}</span></span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>call-zome-fns</span>\n        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>call-zome<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n        <span class="token attr-name">hide-agent-pub-key</span>\n      <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>call-zome-fns</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span><span class="token style-attr language-css"><span class="token attr-name">\n        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token property">align-items</span><span class="token punctuation">:</span> start<span class="token punctuation">;</span> <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>source-chain</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>source-chain</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>entry-contents</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token unit">px</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token unit">px</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>entry-contents</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>holochain-playground-container</span><span class="token punctuation">></span></span>\n  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>'}];for(const n of k){const s=i.querySelector(`[mdjs-story-name="${n.key}"]`);s.codeHasHtml=!0,s.story=n.story,s.code=n.code}customElements.get("mdjs-preview")||import("./af5231aa.js"),customElements.get("mdjs-story")||import("./24f48d72.js");
